<?xml version="1.0" encoding="utf-8"?>
<!--
* Logging Flex projects using Firebug and ThunderBolt AS3
* 
* @version	1.1
* @author	Jens Krause [www.websector.de]
* @date		04/12/08
* @see		http://www.websector.de/blog/category/thunderbolt/
* @see		http://code.google.com/p/flash-thunderbolt/
* @source	http://flash-thunderbolt.googlecode.com/svn/trunk/as3/
* 
* ***********************
* HAPPY LOGGING ;-)
* ***********************
* 
-->
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
	initialize="onAppInitialize()">

	<mx:Script>
        <![CDATA[
        	import org.osflash.thunderbolt.Logger;

            private function onAppInitialize( ):void
            {
                // First of all show an information about ThunderBolt AS3 ;-)
                Logger.about();
            }
                        
            private function traceToFirebug(event:Event):void  
            {
				//
				// Optionally you can hide the time stamp
				// Logger.includeTime = false;

				var myNumber: int = 5;
				var myString: String = "Lorem ipsum";
				var myObject: Object = {exampleArray: ["firstValue", "secondValue"], y: 10, exampleString: "Hello", nestedObject: {x: 100, y: 200}};
				var myArray: Array = ["firstValue",{x: 100, y: 200}, "secondValue"];
				
				var id: String = event.target.id;
				
				switch (id)
				{
					case "infoButton":
						Logger.info("Flex is calling: A simple string", myString);
					break;
					case "warnButton":
						Logger.warn ("Flex is calling: Two log objects: A number typed as int and a string", myNumber, myString);
					break;
					case "errorButton":
						Logger.error ("Flex is calling: An array with a nested object: ", myArray);
					break;
					case "debugButton":
						Logger.debug ("Flex is calling: An object with a nested object and nested array", myObject);
					break;
					case "memButton":
						Logger.info( Logger.memorySnapshot() );
					break;
					default:
						Logger.error ("Flex is calling: A button with an ID named " + id + " is not found");

				}
            }           
            
            private function hideThunderBolt(event:Event):void
            {
             	Logger.hide = event.target.selected;
            }
		
      ]]>
    </mx:Script>
	<mx:Style source="logger.css"/>
	<mx:VBox width="440">
	    <mx:HBox horizontalGap="10"
	    	paddingBottom="20">
			 <mx:Button label="info" 
						click="traceToFirebug(event);" id="infoButton" width="80" height="40"/> 
			 <mx:Button label="warn" 
						click="traceToFirebug(event);" id="warnButton" width="80" height="40"/> 
			 <mx:Button label="error" 
						click="traceToFirebug(event);" id="errorButton" width="80" height="40"/>   	
			 <mx:Button label="debug" 
						click="traceToFirebug(event);" id="debugButton" width="80" height="40"/>
			 <mx:Button label="memory" 
						click="traceToFirebug(event);" id="memButton" width="80" height="40"/>
	    </mx:HBox>
		<mx:CheckBox id="hideChB"
			label="Stop Logging"
			click="hideThunderBolt(event)"/>
	</mx:VBox>	  
</mx:Application>